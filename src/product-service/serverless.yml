# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: node-aws-be
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

useDotenv: true

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

custom:
  webpack:
    webpackConfig: 'webpack.config.js'   # Name of webpack configuration file
    includeModules: true   # Node modules configuration for packaging
    packager: 'npm'   # Packager that will be used to package your external modules
    excludeFiles: ./**/*.test.js # Provide a glob for files to ignore

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: personalAccount
  region: eu-west-1

  environment:
    SNS_ARN:
      Ref: createProductTopic

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource:
        - Fn::GetAtt:
            - catalogItemQueue
            - Arn
    - Effect: "Allow"
      Action:
        - "sns:*"
      Resource:
        Ref: createProductTopic

# you can define service wide environment variables here
#  environment:
#    variable1: value1
resources:
  Resources:
    catalogItemQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemQueue
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic 
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: aaaops1257@gmail.com
        Protocol: email
        TopicArn:
          Ref: createProductTopic

# you can add packaging information here
package:
  individually: true
  patterns:
    - "!*"
    - "!*/**"
    - dist/**

functions:
  getAll:
    handler: dist/handlers/getAllPizzas.getAllPizzas
    events:
      - http: 
          path: pizzas
          method: get
          cors: true
  getById:
    handler: dist/handlers/getPizzaByID.getPizzaByID
    events:
      - http: 
          path: pizzas/{id}
          method: get
          cors: true
          request:
            parameters:
              path:
                id: true
  insertOnePizza:
    handler: dist/handlers/insertOnePizza.insertOnePizza
    events:
      - http: 
          path: pizzas
          method: post
          cors: true
  updateOnePizza:
    handler: dist/handlers/updateOnePizza.updateOnePizza
    events:
      - http: 
          path: pizzas
          method: put
          cors: true
  deleteOnePizza:
    handler: dist/handlers/deleteOnePizza.deleteOnePizza
    events:
      - http: 
          path: pizzas/{id}
          method: delete
          cors: true
          request:
            parameters:
              path:
                id: true
  catalogBatchProcess:
    handler: dist/handlers/catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - catalogItemQueue
              - Arn
