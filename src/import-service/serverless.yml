# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: node-aws-import
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: '2'

# useDotenv: true

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: "webpack.config.js" # Name of webpack configuration file
    includeModules: true # Node modules configuration for packaging
    packager: "npm" # Packager that will be used to package your external modules
    excludeFiles: ./**/*.test.js # Provide a glob for files to ignore

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: personalAccount
  region: eu-west-1

  #    Define function environment variables here
  environment:
    SQS_URL: "https://sqs.eu-west-1.amazonaws.com/549923517243/catalogItemQueue"

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::aws-node-products"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::aws-node-products/*"
    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource:
        - "arn:aws:sqs:eu-west-1:549923517243:catalogItemQueue"


# you can add packaging information here
package:
  individually: true
  patterns:
    - "!*"
    - "!*/**"
    - dist/**

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: aws-node-products
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
            - suffix: .csv
          existing: true
